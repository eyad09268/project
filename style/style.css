*{
  transition: 1s;
  transition-duration: 1.5s;
}
img{
  top: 20px;
    position:  revert-layer;
  border-radius: 55px;
    width: 200px;
  filter: blur(0px) invert(0px);
}
/*houdini*/
@property --blink-opacity {
  syntax: "<number>";
  inherits: false;
  initial-value: 1;
}

/* #fallback @keyframes blink-animation {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}*/

@keyframes blink-animation {
  0%,
  100% {
    opacity: var(--blink-opacity, 1);
  }
  50% {
    opacity: 0;
  }
}
/*houdini*/

/*base*/
:root {
  font-family: Inter, sans-serif;

  --stripe-color: #ffffff;
  --bg: var(--stripe-color);
  --maincolor: var(--bg);
}

body {
  width: 100cqw;
  min-height: 100cqh;
  display: flex;
  place-content: center;
  place-items: flex-start center;
  background: var(--bg);
}

/*custom*/

@keyframes smoothBg {
  from {
    background-position: 50% 50%, 50% 50%;
  }
  to {
    background-position: 350% 50%, 350% 50%;
  }
}

.wrapper {
  width: 100%;
  height: auto;
  position: relative;
}

.hero {
  width: 100%;
  height: 100%;
  min-height: 100vh;
  position: relative;
  display: flex;
  place-content: center;
  place-items: center;
  --stripes: repeating-linear-gradient(
    100deg,
    var(--stripe-color) 0%,
    var(--stripe-color) 7%,
    transparent 10%,
    transparent 12%,
    var(--stripe-color) 16%
  );

  --rainbow: repeating-linear-gradient(
    100deg,
    #60a5fa 10%,
    #e879f9 15%,
    #60a5fa 20%,
    #5eead4 25%,
    #60a5fa 30%
  );
  background-image: var(--stripes), var(--rainbow);
  background-size: 300%, 200%;
  background-position: 50% 50%, 50% 50%;

  filter: blur(10px) invert(100%);

  mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);
  &::after {
    content: "";
    position: absolute;
    inset: 0;
    background-image: var(--stripes), var(--rainbow);
    background-size: 200%, 100%;
    animation: smoothBg 25s linear infinite;
    background-attachment: fixed;
    mix-blend-mode: difference;
  }
}

:has(:checked) {
  --stripe-color: #000;
}
:has(:checked) .hero,
:has(:checked) .hero::after {
  filter: blur(10px) opacity(50%) saturate(200%);
}

.content {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  display: flex;
  place-content: center;
  place-items: center;
  flex-flow: column;
  gap: 4.5%;
  text-align: center;
  
}

.h1--scalingSize {
  font-size: calc(1rem - -5vw);
  position: relative;
}

#switch {
  appearance: none;
  -webkit-appearance: none;
  opacity: 0;
}

[for="switch"] {
  cursor: pointer;
  transition: 0.15s linear(0 0%, 0.16 16.85%, 0.32 31.73%, 1 100%);
  will-change: transform, font-weight;
  padding: 0.5rem;
}

[for="switch"]:where(:hover, :active, :focus-within) {
  /*transform: scale(1.2);
  font-weight: 900;*/
  transition: 0.3s ease;
  animation: animSwitch 0.2s alternate;
  & .icon {
    animation-play-state: paused;
  }
}

@keyframes animSwitch {
  50% {
    transform: scale(1.2);
    font-weight: 900;
  }
}

/*icon houdini*/
.icon {
  width: 1lh;
  height: 1lh;
  aspect-ratio: 1/1;
  padding: 0.25em 0.35rem;
  border-radius: calc(1px / 0);
  border: 1px dashed;
  --blink-opacity: 1;
  animation: blink-animation 2s ease-in-out infinite running;
}

/*challenge*/
.h1--scalingSize::before {
  content: attr(data-text);
  position: absolute;
  inset: 0;
  background: white;
  text-shadow: 0 0 1px #ffffff;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  background-color: white;
  -webkit-mask: linear-gradient(#000 0 0) luminance;
  mask: linear-gradient(#000 0 0) luminance, alpha;
  backdrop-filter: blur(19px) brightness(12.5);
  -webkit-text-stroke: 1px white;
  display: flex;
  margin: auto;
  z-index: 1;
  pointer-events: none;
}
button{
  background-color: #000;
  color: white;
}
:root{
  /* color type A */
  --line_color : #555555 ;
  --back_color : #833ab4  ;

  /* color type B */
  /* --line_color : #1b1919 ;
  --back_color : #E9ECFF  ; */

  /* color type C */
  /* --line_color : #00135C ;
  --back_color : #DEFFFA  ; */
}

.button{
  position : relative ;
  z-index : 0 ;
  width : 240px ;
  height : 56px ;
  text-decoration : none ;
  font-size : 14px ; 
  font-weight : bold ;
  color : var(--line_color) ;
  letter-spacing : 2px ;
  transition : all .3s ease ;
}
.button__text{
  display : flex ;
  justify-content : center ;
  align-items : center ;
  width : 100% ;
  height : 100% ;
}
.button::before,
.button::after,
.button__text::before,
.button__text::after{
  content : '' ;
  position : absolute ;
  height : 3px ;
  border-radius : 2px ;
  background : var(--line_color) ;
  transition : all .5s ease ;
}
.button::before{
  top : 0 ;
  left : 54px ;
  width : calc( 100% - 56px * 2 - 16px ) ;
}
.button::after{
  top : 0 ;
  right : 54px ;
  width : 8px ;
}
.button__text::before{
  bottom : 0 ;
  right : 54px ;
  width : calc( 100% - 56px * 2 - 16px ) ;
}
.button__text::after{
  bottom : 0 ;
  left : 54px ;
  width : 8px ;
}
.button__line{
  position : absolute ;
  top : 0 ;
  width : 56px ;
  height : 100% ;
  overflow : hidden ;
}
.button__line::before{
  content : '' ;
  position : absolute ;
  top : 0 ;
  width : 150% ;
  height : 100% ;
  box-sizing : border-box ;
  border-radius : 300px ;
  border : solid 3px var(--line_color) ;
}
.button__line:nth-child(1),
.button__line:nth-child(1)::before{
  left : 0 ;
}
.button__line:nth-child(2),
.button__line:nth-child(2)::before{
  right : 0 ;
}
.button:hover{
  letter-spacing : 6px ;
}
.button:hover::before,
.button:hover .button__text::before{
  width : 8px ;
}
.button:hover::after,
.button:hover .button__text::after{
  width : calc( 100% - 56px * 2 - 16px ) ;
}
.button__drow1,
.button__drow2{
  position : absolute ;
  z-index : -1 ;
  border-radius : 16px ;
  transform-origin : 16px 16px ;
}
.button__drow1{
  top : -16px ;
  left : 40px ;
  width : 32px ;
  height : 0;
  transform : rotate( 30deg ) ;
}
.button__drow2{
  top : 44px ;
  left : 77px ;
  width : 32px ;
  height : 0 ;
  transform : rotate(-127deg ) ;
}
.button__drow1::before,
.button__drow1::after,
.button__drow2::before,
.button__drow2::after{
  content : '' ;
  position : absolute ;
}
.button__drow1::before{
  bottom : 0 ;
  left : 0 ;
  width : 0 ;
  height : 32px ;
  border-radius : 16px ;
  transform-origin : 16px 16px ;
  transform : rotate( -60deg ) ;
}
.button__drow1::after{
  top : -10px ;
  left : 45px ;
  width : 0 ;
  height : 32px ;
  border-radius : 16px ;
  transform-origin : 16px 16px ;
  transform : rotate( 69deg ) ;
}
.button__drow2::before{
  bottom : 0 ;
  left : 0 ;
  width : 0 ;
  height : 32px ;
  border-radius : 16px ;
  transform-origin : 16px 16px ;
  transform : rotate( -146deg ) ;
}
.button__drow2::after{
  bottom : 26px ;
  left : -40px ;
  width : 0 ;
  height : 32px ;
  border-radius : 16px ;
  transform-origin : 16px 16px ;
  transform : rotate( -262deg ) ;
}
.button__drow1,
.button__drow1::before,
.button__drow1::after,
.button__drow2,
.button__drow2::before,
.button__drow2::after{
  background : var( --back_color ) ;
}
.button:hover .button__drow1{
  animation : drow1 ease-in .06s ;
  animation-fill-mode : forwards ;
}
.button:hover .button__drow1::before{
  animation : drow2 linear .08s .06s ;
  animation-fill-mode : forwards ;
}
.button:hover .button__drow1::after{
  animation : drow3 linear .03s .14s ;
  animation-fill-mode : forwards ;
}
.button:hover .button__drow2{
  animation : drow4 linear .06s .2s ;
  animation-fill-mode : forwards ;
}
.button:hover .button__drow2::before{
  animation : drow3 linear .03s .26s ;
  animation-fill-mode : forwards ;
}
.button:hover .button__drow2::after{
  animation : drow5 linear .06s .32s ;
  animation-fill-mode : forwards ;
}
@keyframes drow1{
  0%   { height : 0 ; }
  100% { height : 100px ; }
}
@keyframes drow2{
  0%   { width : 0 ; opacity : 0 ;}
  10%  { opacity : 0 ;}
  11%  { opacity : 1 ;}
  100% { width : 120px ; }
}
@keyframes drow3{
  0%   { width : 0 ; }
  100% { width : 80px ; }
}
@keyframes drow4{
  0%   { height : 0 ; }
  100% { height : 120px ; }
}
@keyframes drow5{
  0%   { width : 0 ; }
  100% { width : 124px ; }
}






/* 本体には関係ないスタイル */
.container{
  width : 100% ;
  display : flex ;
  flex-direction : column ;
  justify-content : center ;
  align-items : center ;
}